
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ScheduledSlot` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import type * as PJTG from '../pjtg';
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ScheduledSlot
 * 
 */
export type ScheduledSlotModel = runtime.Types.Result.DefaultSelection<Prisma.$ScheduledSlotPayload>

export type AggregateScheduledSlot = {
  _count: ScheduledSlotCountAggregateOutputType | null
  _avg: ScheduledSlotAvgAggregateOutputType | null
  _sum: ScheduledSlotSumAggregateOutputType | null
  _min: ScheduledSlotMinAggregateOutputType | null
  _max: ScheduledSlotMaxAggregateOutputType | null
}

export type ScheduledSlotAvgAggregateOutputType = {
  chatId: number | null
}

export type ScheduledSlotSumAggregateOutputType = {
  chatId: bigint | null
}

export type ScheduledSlotMinAggregateOutputType = {
  id: string | null
  userId: string | null
  chatId: bigint | null
  scheduledFor: Date | null
  status: $Enums.ScheduledSlotStatus | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ScheduledSlotMaxAggregateOutputType = {
  id: string | null
  userId: string | null
  chatId: bigint | null
  scheduledFor: Date | null
  status: $Enums.ScheduledSlotStatus | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ScheduledSlotCountAggregateOutputType = {
  id: number
  userId: number
  chatId: number
  scheduledFor: number
  status: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ScheduledSlotAvgAggregateInputType = {
  chatId?: true
}

export type ScheduledSlotSumAggregateInputType = {
  chatId?: true
}

export type ScheduledSlotMinAggregateInputType = {
  id?: true
  userId?: true
  chatId?: true
  scheduledFor?: true
  status?: true
  createdAt?: true
  updatedAt?: true
}

export type ScheduledSlotMaxAggregateInputType = {
  id?: true
  userId?: true
  chatId?: true
  scheduledFor?: true
  status?: true
  createdAt?: true
  updatedAt?: true
}

export type ScheduledSlotCountAggregateInputType = {
  id?: true
  userId?: true
  chatId?: true
  scheduledFor?: true
  status?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ScheduledSlotAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ScheduledSlot to aggregate.
   */
  where?: Prisma.ScheduledSlotWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ScheduledSlots to fetch.
   */
  orderBy?: Prisma.ScheduledSlotOrderByWithRelationInput | Prisma.ScheduledSlotOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ScheduledSlotWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ScheduledSlots from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ScheduledSlots.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ScheduledSlots
  **/
  _count?: true | ScheduledSlotCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ScheduledSlotAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ScheduledSlotSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ScheduledSlotMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ScheduledSlotMaxAggregateInputType
}

export type GetScheduledSlotAggregateType<T extends ScheduledSlotAggregateArgs> = {
      [P in keyof T & keyof AggregateScheduledSlot]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateScheduledSlot[P]>
    : Prisma.GetScalarType<T[P], AggregateScheduledSlot[P]>
}




export type ScheduledSlotGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ScheduledSlotWhereInput
  orderBy?: Prisma.ScheduledSlotOrderByWithAggregationInput | Prisma.ScheduledSlotOrderByWithAggregationInput[]
  by: Prisma.ScheduledSlotScalarFieldEnum[] | Prisma.ScheduledSlotScalarFieldEnum
  having?: Prisma.ScheduledSlotScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ScheduledSlotCountAggregateInputType | true
  _avg?: ScheduledSlotAvgAggregateInputType
  _sum?: ScheduledSlotSumAggregateInputType
  _min?: ScheduledSlotMinAggregateInputType
  _max?: ScheduledSlotMaxAggregateInputType
}

export type ScheduledSlotGroupByOutputType = {
  id: string
  userId: string
  chatId: bigint
  scheduledFor: Date | null
  status: $Enums.ScheduledSlotStatus
  createdAt: Date
  updatedAt: Date
  _count: ScheduledSlotCountAggregateOutputType | null
  _avg: ScheduledSlotAvgAggregateOutputType | null
  _sum: ScheduledSlotSumAggregateOutputType | null
  _min: ScheduledSlotMinAggregateOutputType | null
  _max: ScheduledSlotMaxAggregateOutputType | null
}

type GetScheduledSlotGroupByPayload<T extends ScheduledSlotGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ScheduledSlotGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ScheduledSlotGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ScheduledSlotGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ScheduledSlotGroupByOutputType[P]>
      }
    >
  >



export type ScheduledSlotWhereInput = {
  AND?: Prisma.ScheduledSlotWhereInput | Prisma.ScheduledSlotWhereInput[]
  OR?: Prisma.ScheduledSlotWhereInput[]
  NOT?: Prisma.ScheduledSlotWhereInput | Prisma.ScheduledSlotWhereInput[]
  id?: Prisma.UuidFilter<"ScheduledSlot"> | string
  userId?: Prisma.UuidFilter<"ScheduledSlot"> | string
  chatId?: Prisma.BigIntFilter<"ScheduledSlot"> | bigint | number
  scheduledFor?: Prisma.DateTimeNullableFilter<"ScheduledSlot"> | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFilter<"ScheduledSlot"> | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFilter<"ScheduledSlot"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ScheduledSlot"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  postingChannel?: Prisma.XOR<Prisma.PostingChannelScalarRelationFilter, Prisma.PostingChannelWhereInput>
  publishedPhotos?: Prisma.PublishedPhotoListRelationFilter
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetListRelationFilter
}

export type ScheduledSlotOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  chatId?: Prisma.SortOrder
  scheduledFor?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
  postingChannel?: Prisma.PostingChannelOrderByWithRelationInput
  publishedPhotos?: Prisma.PublishedPhotoOrderByRelationAggregateInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetOrderByRelationAggregateInput
}

export type ScheduledSlotWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ScheduledSlotWhereInput | Prisma.ScheduledSlotWhereInput[]
  OR?: Prisma.ScheduledSlotWhereInput[]
  NOT?: Prisma.ScheduledSlotWhereInput | Prisma.ScheduledSlotWhereInput[]
  userId?: Prisma.UuidFilter<"ScheduledSlot"> | string
  chatId?: Prisma.BigIntFilter<"ScheduledSlot"> | bigint | number
  scheduledFor?: Prisma.DateTimeNullableFilter<"ScheduledSlot"> | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFilter<"ScheduledSlot"> | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFilter<"ScheduledSlot"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ScheduledSlot"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  postingChannel?: Prisma.XOR<Prisma.PostingChannelScalarRelationFilter, Prisma.PostingChannelWhereInput>
  publishedPhotos?: Prisma.PublishedPhotoListRelationFilter
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetListRelationFilter
}, "id">

export type ScheduledSlotOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  chatId?: Prisma.SortOrder
  scheduledFor?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ScheduledSlotCountOrderByAggregateInput
  _avg?: Prisma.ScheduledSlotAvgOrderByAggregateInput
  _max?: Prisma.ScheduledSlotMaxOrderByAggregateInput
  _min?: Prisma.ScheduledSlotMinOrderByAggregateInput
  _sum?: Prisma.ScheduledSlotSumOrderByAggregateInput
}

export type ScheduledSlotScalarWhereWithAggregatesInput = {
  AND?: Prisma.ScheduledSlotScalarWhereWithAggregatesInput | Prisma.ScheduledSlotScalarWhereWithAggregatesInput[]
  OR?: Prisma.ScheduledSlotScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ScheduledSlotScalarWhereWithAggregatesInput | Prisma.ScheduledSlotScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"ScheduledSlot"> | string
  userId?: Prisma.UuidWithAggregatesFilter<"ScheduledSlot"> | string
  chatId?: Prisma.BigIntWithAggregatesFilter<"ScheduledSlot"> | bigint | number
  scheduledFor?: Prisma.DateTimeNullableWithAggregatesFilter<"ScheduledSlot"> | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusWithAggregatesFilter<"ScheduledSlot"> | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ScheduledSlot"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ScheduledSlot"> | Date | string
}

export type ScheduledSlotCreateInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutScheduledSlotsInput
  postingChannel: Prisma.PostingChannelCreateNestedOneWithoutScheduledSlotsInput
  publishedPhotos?: Prisma.PublishedPhotoCreateNestedManyWithoutScheduledSlotInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotUncheckedCreateInput = {
  id?: string
  userId: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  publishedPhotos?: Prisma.PublishedPhotoUncheckedCreateNestedManyWithoutScheduledSlotInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUncheckedCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutScheduledSlotsNestedInput
  postingChannel?: Prisma.PostingChannelUpdateOneRequiredWithoutScheduledSlotsNestedInput
  publishedPhotos?: Prisma.PublishedPhotoUpdateManyWithoutScheduledSlotNestedInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedPhotos?: Prisma.PublishedPhotoUncheckedUpdateManyWithoutScheduledSlotNestedInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUncheckedUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotCreateManyInput = {
  id?: string
  userId: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ScheduledSlotUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ScheduledSlotUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ScheduledSlotListRelationFilter = {
  every?: Prisma.ScheduledSlotWhereInput
  some?: Prisma.ScheduledSlotWhereInput
  none?: Prisma.ScheduledSlotWhereInput
}

export type ScheduledSlotOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ScheduledSlotNullableScalarRelationFilter = {
  is?: Prisma.ScheduledSlotWhereInput | null
  isNot?: Prisma.ScheduledSlotWhereInput | null
}

export type ScheduledSlotCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  chatId?: Prisma.SortOrder
  scheduledFor?: Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ScheduledSlotAvgOrderByAggregateInput = {
  chatId?: Prisma.SortOrder
}

export type ScheduledSlotMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  chatId?: Prisma.SortOrder
  scheduledFor?: Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ScheduledSlotMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  chatId?: Prisma.SortOrder
  scheduledFor?: Prisma.SortOrder
  status?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ScheduledSlotSumOrderByAggregateInput = {
  chatId?: Prisma.SortOrder
}

export type ScheduledSlotScalarRelationFilter = {
  is?: Prisma.ScheduledSlotWhereInput
  isNot?: Prisma.ScheduledSlotWhereInput
}

export type ScheduledSlotCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutUserInput, Prisma.ScheduledSlotUncheckedCreateWithoutUserInput> | Prisma.ScheduledSlotCreateWithoutUserInput[] | Prisma.ScheduledSlotUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutUserInput | Prisma.ScheduledSlotCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.ScheduledSlotCreateManyUserInputEnvelope
  connect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
}

export type ScheduledSlotUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutUserInput, Prisma.ScheduledSlotUncheckedCreateWithoutUserInput> | Prisma.ScheduledSlotCreateWithoutUserInput[] | Prisma.ScheduledSlotUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutUserInput | Prisma.ScheduledSlotCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.ScheduledSlotCreateManyUserInputEnvelope
  connect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
}

export type ScheduledSlotUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutUserInput, Prisma.ScheduledSlotUncheckedCreateWithoutUserInput> | Prisma.ScheduledSlotCreateWithoutUserInput[] | Prisma.ScheduledSlotUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutUserInput | Prisma.ScheduledSlotCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.ScheduledSlotUpsertWithWhereUniqueWithoutUserInput | Prisma.ScheduledSlotUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.ScheduledSlotCreateManyUserInputEnvelope
  set?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  disconnect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  delete?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  connect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  update?: Prisma.ScheduledSlotUpdateWithWhereUniqueWithoutUserInput | Prisma.ScheduledSlotUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.ScheduledSlotUpdateManyWithWhereWithoutUserInput | Prisma.ScheduledSlotUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.ScheduledSlotScalarWhereInput | Prisma.ScheduledSlotScalarWhereInput[]
}

export type ScheduledSlotUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutUserInput, Prisma.ScheduledSlotUncheckedCreateWithoutUserInput> | Prisma.ScheduledSlotCreateWithoutUserInput[] | Prisma.ScheduledSlotUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutUserInput | Prisma.ScheduledSlotCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.ScheduledSlotUpsertWithWhereUniqueWithoutUserInput | Prisma.ScheduledSlotUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.ScheduledSlotCreateManyUserInputEnvelope
  set?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  disconnect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  delete?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  connect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  update?: Prisma.ScheduledSlotUpdateWithWhereUniqueWithoutUserInput | Prisma.ScheduledSlotUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.ScheduledSlotUpdateManyWithWhereWithoutUserInput | Prisma.ScheduledSlotUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.ScheduledSlotScalarWhereInput | Prisma.ScheduledSlotScalarWhereInput[]
}

export type ScheduledSlotCreateNestedManyWithoutPostingChannelInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPostingChannelInput, Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput> | Prisma.ScheduledSlotCreateWithoutPostingChannelInput[] | Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput[]
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutPostingChannelInput | Prisma.ScheduledSlotCreateOrConnectWithoutPostingChannelInput[]
  createMany?: Prisma.ScheduledSlotCreateManyPostingChannelInputEnvelope
  connect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
}

export type ScheduledSlotUncheckedCreateNestedManyWithoutPostingChannelInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPostingChannelInput, Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput> | Prisma.ScheduledSlotCreateWithoutPostingChannelInput[] | Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput[]
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutPostingChannelInput | Prisma.ScheduledSlotCreateOrConnectWithoutPostingChannelInput[]
  createMany?: Prisma.ScheduledSlotCreateManyPostingChannelInputEnvelope
  connect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
}

export type ScheduledSlotUpdateManyWithoutPostingChannelNestedInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPostingChannelInput, Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput> | Prisma.ScheduledSlotCreateWithoutPostingChannelInput[] | Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput[]
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutPostingChannelInput | Prisma.ScheduledSlotCreateOrConnectWithoutPostingChannelInput[]
  upsert?: Prisma.ScheduledSlotUpsertWithWhereUniqueWithoutPostingChannelInput | Prisma.ScheduledSlotUpsertWithWhereUniqueWithoutPostingChannelInput[]
  createMany?: Prisma.ScheduledSlotCreateManyPostingChannelInputEnvelope
  set?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  disconnect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  delete?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  connect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  update?: Prisma.ScheduledSlotUpdateWithWhereUniqueWithoutPostingChannelInput | Prisma.ScheduledSlotUpdateWithWhereUniqueWithoutPostingChannelInput[]
  updateMany?: Prisma.ScheduledSlotUpdateManyWithWhereWithoutPostingChannelInput | Prisma.ScheduledSlotUpdateManyWithWhereWithoutPostingChannelInput[]
  deleteMany?: Prisma.ScheduledSlotScalarWhereInput | Prisma.ScheduledSlotScalarWhereInput[]
}

export type ScheduledSlotUncheckedUpdateManyWithoutPostingChannelNestedInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPostingChannelInput, Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput> | Prisma.ScheduledSlotCreateWithoutPostingChannelInput[] | Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput[]
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutPostingChannelInput | Prisma.ScheduledSlotCreateOrConnectWithoutPostingChannelInput[]
  upsert?: Prisma.ScheduledSlotUpsertWithWhereUniqueWithoutPostingChannelInput | Prisma.ScheduledSlotUpsertWithWhereUniqueWithoutPostingChannelInput[]
  createMany?: Prisma.ScheduledSlotCreateManyPostingChannelInputEnvelope
  set?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  disconnect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  delete?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  connect?: Prisma.ScheduledSlotWhereUniqueInput | Prisma.ScheduledSlotWhereUniqueInput[]
  update?: Prisma.ScheduledSlotUpdateWithWhereUniqueWithoutPostingChannelInput | Prisma.ScheduledSlotUpdateWithWhereUniqueWithoutPostingChannelInput[]
  updateMany?: Prisma.ScheduledSlotUpdateManyWithWhereWithoutPostingChannelInput | Prisma.ScheduledSlotUpdateManyWithWhereWithoutPostingChannelInput[]
  deleteMany?: Prisma.ScheduledSlotScalarWhereInput | Prisma.ScheduledSlotScalarWhereInput[]
}

export type ScheduledSlotCreateNestedOneWithoutPublishedPhotosInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPublishedPhotosInput, Prisma.ScheduledSlotUncheckedCreateWithoutPublishedPhotosInput>
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutPublishedPhotosInput
  connect?: Prisma.ScheduledSlotWhereUniqueInput
}

export type ScheduledSlotUpdateOneWithoutPublishedPhotosNestedInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPublishedPhotosInput, Prisma.ScheduledSlotUncheckedCreateWithoutPublishedPhotosInput>
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutPublishedPhotosInput
  upsert?: Prisma.ScheduledSlotUpsertWithoutPublishedPhotosInput
  disconnect?: Prisma.ScheduledSlotWhereInput | boolean
  delete?: Prisma.ScheduledSlotWhereInput | boolean
  connect?: Prisma.ScheduledSlotWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ScheduledSlotUpdateToOneWithWhereWithoutPublishedPhotosInput, Prisma.ScheduledSlotUpdateWithoutPublishedPhotosInput>, Prisma.ScheduledSlotUncheckedUpdateWithoutPublishedPhotosInput>
}

export type EnumScheduledSlotStatusFieldUpdateOperationsInput = {
  set?: $Enums.ScheduledSlotStatus
}

export type ScheduledSlotCreateNestedOneWithoutScheduledSlotTweetsInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutScheduledSlotTweetsInput, Prisma.ScheduledSlotUncheckedCreateWithoutScheduledSlotTweetsInput>
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutScheduledSlotTweetsInput
  connect?: Prisma.ScheduledSlotWhereUniqueInput
}

export type ScheduledSlotUpdateOneRequiredWithoutScheduledSlotTweetsNestedInput = {
  create?: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutScheduledSlotTweetsInput, Prisma.ScheduledSlotUncheckedCreateWithoutScheduledSlotTweetsInput>
  connectOrCreate?: Prisma.ScheduledSlotCreateOrConnectWithoutScheduledSlotTweetsInput
  upsert?: Prisma.ScheduledSlotUpsertWithoutScheduledSlotTweetsInput
  connect?: Prisma.ScheduledSlotWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ScheduledSlotUpdateToOneWithWhereWithoutScheduledSlotTweetsInput, Prisma.ScheduledSlotUpdateWithoutScheduledSlotTweetsInput>, Prisma.ScheduledSlotUncheckedUpdateWithoutScheduledSlotTweetsInput>
}

export type ScheduledSlotCreateWithoutUserInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  postingChannel: Prisma.PostingChannelCreateNestedOneWithoutScheduledSlotsInput
  publishedPhotos?: Prisma.PublishedPhotoCreateNestedManyWithoutScheduledSlotInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotUncheckedCreateWithoutUserInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  publishedPhotos?: Prisma.PublishedPhotoUncheckedCreateNestedManyWithoutScheduledSlotInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUncheckedCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotCreateOrConnectWithoutUserInput = {
  where: Prisma.ScheduledSlotWhereUniqueInput
  create: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutUserInput, Prisma.ScheduledSlotUncheckedCreateWithoutUserInput>
}

export type ScheduledSlotCreateManyUserInputEnvelope = {
  data: Prisma.ScheduledSlotCreateManyUserInput | Prisma.ScheduledSlotCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type ScheduledSlotUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.ScheduledSlotWhereUniqueInput
  update: Prisma.XOR<Prisma.ScheduledSlotUpdateWithoutUserInput, Prisma.ScheduledSlotUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutUserInput, Prisma.ScheduledSlotUncheckedCreateWithoutUserInput>
}

export type ScheduledSlotUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.ScheduledSlotWhereUniqueInput
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateWithoutUserInput, Prisma.ScheduledSlotUncheckedUpdateWithoutUserInput>
}

export type ScheduledSlotUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.ScheduledSlotScalarWhereInput
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateManyMutationInput, Prisma.ScheduledSlotUncheckedUpdateManyWithoutUserInput>
}

export type ScheduledSlotScalarWhereInput = {
  AND?: Prisma.ScheduledSlotScalarWhereInput | Prisma.ScheduledSlotScalarWhereInput[]
  OR?: Prisma.ScheduledSlotScalarWhereInput[]
  NOT?: Prisma.ScheduledSlotScalarWhereInput | Prisma.ScheduledSlotScalarWhereInput[]
  id?: Prisma.UuidFilter<"ScheduledSlot"> | string
  userId?: Prisma.UuidFilter<"ScheduledSlot"> | string
  chatId?: Prisma.BigIntFilter<"ScheduledSlot"> | bigint | number
  scheduledFor?: Prisma.DateTimeNullableFilter<"ScheduledSlot"> | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFilter<"ScheduledSlot"> | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFilter<"ScheduledSlot"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ScheduledSlot"> | Date | string
}

export type ScheduledSlotCreateWithoutPostingChannelInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutScheduledSlotsInput
  publishedPhotos?: Prisma.PublishedPhotoCreateNestedManyWithoutScheduledSlotInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotUncheckedCreateWithoutPostingChannelInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  publishedPhotos?: Prisma.PublishedPhotoUncheckedCreateNestedManyWithoutScheduledSlotInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUncheckedCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotCreateOrConnectWithoutPostingChannelInput = {
  where: Prisma.ScheduledSlotWhereUniqueInput
  create: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPostingChannelInput, Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput>
}

export type ScheduledSlotCreateManyPostingChannelInputEnvelope = {
  data: Prisma.ScheduledSlotCreateManyPostingChannelInput | Prisma.ScheduledSlotCreateManyPostingChannelInput[]
  skipDuplicates?: boolean
}

export type ScheduledSlotUpsertWithWhereUniqueWithoutPostingChannelInput = {
  where: Prisma.ScheduledSlotWhereUniqueInput
  update: Prisma.XOR<Prisma.ScheduledSlotUpdateWithoutPostingChannelInput, Prisma.ScheduledSlotUncheckedUpdateWithoutPostingChannelInput>
  create: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPostingChannelInput, Prisma.ScheduledSlotUncheckedCreateWithoutPostingChannelInput>
}

export type ScheduledSlotUpdateWithWhereUniqueWithoutPostingChannelInput = {
  where: Prisma.ScheduledSlotWhereUniqueInput
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateWithoutPostingChannelInput, Prisma.ScheduledSlotUncheckedUpdateWithoutPostingChannelInput>
}

export type ScheduledSlotUpdateManyWithWhereWithoutPostingChannelInput = {
  where: Prisma.ScheduledSlotScalarWhereInput
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateManyMutationInput, Prisma.ScheduledSlotUncheckedUpdateManyWithoutPostingChannelInput>
}

export type ScheduledSlotCreateWithoutPublishedPhotosInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutScheduledSlotsInput
  postingChannel: Prisma.PostingChannelCreateNestedOneWithoutScheduledSlotsInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotUncheckedCreateWithoutPublishedPhotosInput = {
  id?: string
  userId: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUncheckedCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotCreateOrConnectWithoutPublishedPhotosInput = {
  where: Prisma.ScheduledSlotWhereUniqueInput
  create: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPublishedPhotosInput, Prisma.ScheduledSlotUncheckedCreateWithoutPublishedPhotosInput>
}

export type ScheduledSlotUpsertWithoutPublishedPhotosInput = {
  update: Prisma.XOR<Prisma.ScheduledSlotUpdateWithoutPublishedPhotosInput, Prisma.ScheduledSlotUncheckedUpdateWithoutPublishedPhotosInput>
  create: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutPublishedPhotosInput, Prisma.ScheduledSlotUncheckedCreateWithoutPublishedPhotosInput>
  where?: Prisma.ScheduledSlotWhereInput
}

export type ScheduledSlotUpdateToOneWithWhereWithoutPublishedPhotosInput = {
  where?: Prisma.ScheduledSlotWhereInput
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateWithoutPublishedPhotosInput, Prisma.ScheduledSlotUncheckedUpdateWithoutPublishedPhotosInput>
}

export type ScheduledSlotUpdateWithoutPublishedPhotosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutScheduledSlotsNestedInput
  postingChannel?: Prisma.PostingChannelUpdateOneRequiredWithoutScheduledSlotsNestedInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotUncheckedUpdateWithoutPublishedPhotosInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUncheckedUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotCreateWithoutScheduledSlotTweetsInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  user: Prisma.UserCreateNestedOneWithoutScheduledSlotsInput
  postingChannel: Prisma.PostingChannelCreateNestedOneWithoutScheduledSlotsInput
  publishedPhotos?: Prisma.PublishedPhotoCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotUncheckedCreateWithoutScheduledSlotTweetsInput = {
  id?: string
  userId: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  publishedPhotos?: Prisma.PublishedPhotoUncheckedCreateNestedManyWithoutScheduledSlotInput
}

export type ScheduledSlotCreateOrConnectWithoutScheduledSlotTweetsInput = {
  where: Prisma.ScheduledSlotWhereUniqueInput
  create: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutScheduledSlotTweetsInput, Prisma.ScheduledSlotUncheckedCreateWithoutScheduledSlotTweetsInput>
}

export type ScheduledSlotUpsertWithoutScheduledSlotTweetsInput = {
  update: Prisma.XOR<Prisma.ScheduledSlotUpdateWithoutScheduledSlotTweetsInput, Prisma.ScheduledSlotUncheckedUpdateWithoutScheduledSlotTweetsInput>
  create: Prisma.XOR<Prisma.ScheduledSlotCreateWithoutScheduledSlotTweetsInput, Prisma.ScheduledSlotUncheckedCreateWithoutScheduledSlotTweetsInput>
  where?: Prisma.ScheduledSlotWhereInput
}

export type ScheduledSlotUpdateToOneWithWhereWithoutScheduledSlotTweetsInput = {
  where?: Prisma.ScheduledSlotWhereInput
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateWithoutScheduledSlotTweetsInput, Prisma.ScheduledSlotUncheckedUpdateWithoutScheduledSlotTweetsInput>
}

export type ScheduledSlotUpdateWithoutScheduledSlotTweetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutScheduledSlotsNestedInput
  postingChannel?: Prisma.PostingChannelUpdateOneRequiredWithoutScheduledSlotsNestedInput
  publishedPhotos?: Prisma.PublishedPhotoUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotUncheckedUpdateWithoutScheduledSlotTweetsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedPhotos?: Prisma.PublishedPhotoUncheckedUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotCreateManyUserInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ScheduledSlotUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  postingChannel?: Prisma.PostingChannelUpdateOneRequiredWithoutScheduledSlotsNestedInput
  publishedPhotos?: Prisma.PublishedPhotoUpdateManyWithoutScheduledSlotNestedInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedPhotos?: Prisma.PublishedPhotoUncheckedUpdateManyWithoutScheduledSlotNestedInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUncheckedUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ScheduledSlotCreateManyPostingChannelInput = {
  id?: string
  chatId: bigint | number
  scheduledFor?: Date | string | null
  status?: $Enums.ScheduledSlotStatus
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ScheduledSlotUpdateWithoutPostingChannelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutScheduledSlotsNestedInput
  publishedPhotos?: Prisma.PublishedPhotoUpdateManyWithoutScheduledSlotNestedInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotUncheckedUpdateWithoutPostingChannelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  publishedPhotos?: Prisma.PublishedPhotoUncheckedUpdateManyWithoutScheduledSlotNestedInput
  scheduledSlotTweets?: Prisma.ScheduledSlotTweetUncheckedUpdateManyWithoutScheduledSlotNestedInput
}

export type ScheduledSlotUncheckedUpdateManyWithoutPostingChannelInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  chatId?: Prisma.BigIntFieldUpdateOperationsInput | bigint | number
  scheduledFor?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumScheduledSlotStatusFieldUpdateOperationsInput | $Enums.ScheduledSlotStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ScheduledSlotCountOutputType
 */

export type ScheduledSlotCountOutputType = {
  publishedPhotos: number
  scheduledSlotTweets: number
}

export type ScheduledSlotCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  publishedPhotos?: boolean | ScheduledSlotCountOutputTypeCountPublishedPhotosArgs
  scheduledSlotTweets?: boolean | ScheduledSlotCountOutputTypeCountScheduledSlotTweetsArgs
}

/**
 * ScheduledSlotCountOutputType without action
 */
export type ScheduledSlotCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlotCountOutputType
   */
  select?: Prisma.ScheduledSlotCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ScheduledSlotCountOutputType without action
 */
export type ScheduledSlotCountOutputTypeCountPublishedPhotosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PublishedPhotoWhereInput
}

/**
 * ScheduledSlotCountOutputType without action
 */
export type ScheduledSlotCountOutputTypeCountScheduledSlotTweetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ScheduledSlotTweetWhereInput
}


export type ScheduledSlotSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  chatId?: boolean
  scheduledFor?: boolean
  status?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  postingChannel?: boolean | Prisma.PostingChannelDefaultArgs<ExtArgs>
  publishedPhotos?: boolean | Prisma.ScheduledSlot$publishedPhotosArgs<ExtArgs>
  scheduledSlotTweets?: boolean | Prisma.ScheduledSlot$scheduledSlotTweetsArgs<ExtArgs>
  _count?: boolean | Prisma.ScheduledSlotCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["scheduledSlot"]>

export type ScheduledSlotSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  chatId?: boolean
  scheduledFor?: boolean
  status?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  postingChannel?: boolean | Prisma.PostingChannelDefaultArgs<ExtArgs>
}, ExtArgs["result"]["scheduledSlot"]>

export type ScheduledSlotSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  chatId?: boolean
  scheduledFor?: boolean
  status?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  postingChannel?: boolean | Prisma.PostingChannelDefaultArgs<ExtArgs>
}, ExtArgs["result"]["scheduledSlot"]>

export type ScheduledSlotSelectScalar = {
  id?: boolean
  userId?: boolean
  chatId?: boolean
  scheduledFor?: boolean
  status?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ScheduledSlotOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "userId" | "chatId" | "scheduledFor" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["scheduledSlot"]>
export type ScheduledSlotInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  postingChannel?: boolean | Prisma.PostingChannelDefaultArgs<ExtArgs>
  publishedPhotos?: boolean | Prisma.ScheduledSlot$publishedPhotosArgs<ExtArgs>
  scheduledSlotTweets?: boolean | Prisma.ScheduledSlot$scheduledSlotTweetsArgs<ExtArgs>
  _count?: boolean | Prisma.ScheduledSlotCountOutputTypeDefaultArgs<ExtArgs>
}
export type ScheduledSlotIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  postingChannel?: boolean | Prisma.PostingChannelDefaultArgs<ExtArgs>
}
export type ScheduledSlotIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  postingChannel?: boolean | Prisma.PostingChannelDefaultArgs<ExtArgs>
}

export type $ScheduledSlotPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ScheduledSlot"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
    postingChannel: Prisma.$PostingChannelPayload<ExtArgs>
    publishedPhotos: Prisma.$PublishedPhotoPayload<ExtArgs>[]
    scheduledSlotTweets: Prisma.$ScheduledSlotTweetPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    userId: string
    chatId: bigint
    scheduledFor: Date | null
    status: $Enums.ScheduledSlotStatus
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["scheduledSlot"]>
  composites: {}
}

export type ScheduledSlotGetPayload<S extends boolean | null | undefined | ScheduledSlotDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload, S>

export type ScheduledSlotCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ScheduledSlotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: ScheduledSlotCountAggregateInputType | true
  }

export interface ScheduledSlotDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ScheduledSlot'], meta: { name: 'ScheduledSlot' } }
  /**
   * Find zero or one ScheduledSlot that matches the filter.
   * @param {ScheduledSlotFindUniqueArgs} args - Arguments to find a ScheduledSlot
   * @example
   * // Get one ScheduledSlot
   * const scheduledSlot = await prisma.scheduledSlot.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ScheduledSlotFindUniqueArgs>(args: Prisma.SelectSubset<T, ScheduledSlotFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ScheduledSlotClient<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ScheduledSlot that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ScheduledSlotFindUniqueOrThrowArgs} args - Arguments to find a ScheduledSlot
   * @example
   * // Get one ScheduledSlot
   * const scheduledSlot = await prisma.scheduledSlot.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ScheduledSlotFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ScheduledSlotFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ScheduledSlotClient<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ScheduledSlot that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledSlotFindFirstArgs} args - Arguments to find a ScheduledSlot
   * @example
   * // Get one ScheduledSlot
   * const scheduledSlot = await prisma.scheduledSlot.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ScheduledSlotFindFirstArgs>(args?: Prisma.SelectSubset<T, ScheduledSlotFindFirstArgs<ExtArgs>>): Prisma.Prisma__ScheduledSlotClient<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ScheduledSlot that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledSlotFindFirstOrThrowArgs} args - Arguments to find a ScheduledSlot
   * @example
   * // Get one ScheduledSlot
   * const scheduledSlot = await prisma.scheduledSlot.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ScheduledSlotFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ScheduledSlotFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ScheduledSlotClient<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ScheduledSlots that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledSlotFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ScheduledSlots
   * const scheduledSlots = await prisma.scheduledSlot.findMany()
   * 
   * // Get first 10 ScheduledSlots
   * const scheduledSlots = await prisma.scheduledSlot.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const scheduledSlotWithIdOnly = await prisma.scheduledSlot.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ScheduledSlotFindManyArgs>(args?: Prisma.SelectSubset<T, ScheduledSlotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ScheduledSlot.
   * @param {ScheduledSlotCreateArgs} args - Arguments to create a ScheduledSlot.
   * @example
   * // Create one ScheduledSlot
   * const ScheduledSlot = await prisma.scheduledSlot.create({
   *   data: {
   *     // ... data to create a ScheduledSlot
   *   }
   * })
   * 
   */
  create<T extends ScheduledSlotCreateArgs>(args: Prisma.SelectSubset<T, ScheduledSlotCreateArgs<ExtArgs>>): Prisma.Prisma__ScheduledSlotClient<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ScheduledSlots.
   * @param {ScheduledSlotCreateManyArgs} args - Arguments to create many ScheduledSlots.
   * @example
   * // Create many ScheduledSlots
   * const scheduledSlot = await prisma.scheduledSlot.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ScheduledSlotCreateManyArgs>(args?: Prisma.SelectSubset<T, ScheduledSlotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ScheduledSlots and returns the data saved in the database.
   * @param {ScheduledSlotCreateManyAndReturnArgs} args - Arguments to create many ScheduledSlots.
   * @example
   * // Create many ScheduledSlots
   * const scheduledSlot = await prisma.scheduledSlot.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ScheduledSlots and only return the `id`
   * const scheduledSlotWithIdOnly = await prisma.scheduledSlot.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ScheduledSlotCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ScheduledSlotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ScheduledSlot.
   * @param {ScheduledSlotDeleteArgs} args - Arguments to delete one ScheduledSlot.
   * @example
   * // Delete one ScheduledSlot
   * const ScheduledSlot = await prisma.scheduledSlot.delete({
   *   where: {
   *     // ... filter to delete one ScheduledSlot
   *   }
   * })
   * 
   */
  delete<T extends ScheduledSlotDeleteArgs>(args: Prisma.SelectSubset<T, ScheduledSlotDeleteArgs<ExtArgs>>): Prisma.Prisma__ScheduledSlotClient<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ScheduledSlot.
   * @param {ScheduledSlotUpdateArgs} args - Arguments to update one ScheduledSlot.
   * @example
   * // Update one ScheduledSlot
   * const scheduledSlot = await prisma.scheduledSlot.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ScheduledSlotUpdateArgs>(args: Prisma.SelectSubset<T, ScheduledSlotUpdateArgs<ExtArgs>>): Prisma.Prisma__ScheduledSlotClient<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ScheduledSlots.
   * @param {ScheduledSlotDeleteManyArgs} args - Arguments to filter ScheduledSlots to delete.
   * @example
   * // Delete a few ScheduledSlots
   * const { count } = await prisma.scheduledSlot.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ScheduledSlotDeleteManyArgs>(args?: Prisma.SelectSubset<T, ScheduledSlotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ScheduledSlots.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledSlotUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ScheduledSlots
   * const scheduledSlot = await prisma.scheduledSlot.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ScheduledSlotUpdateManyArgs>(args: Prisma.SelectSubset<T, ScheduledSlotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ScheduledSlots and returns the data updated in the database.
   * @param {ScheduledSlotUpdateManyAndReturnArgs} args - Arguments to update many ScheduledSlots.
   * @example
   * // Update many ScheduledSlots
   * const scheduledSlot = await prisma.scheduledSlot.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ScheduledSlots and only return the `id`
   * const scheduledSlotWithIdOnly = await prisma.scheduledSlot.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ScheduledSlotUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ScheduledSlotUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ScheduledSlot.
   * @param {ScheduledSlotUpsertArgs} args - Arguments to update or create a ScheduledSlot.
   * @example
   * // Update or create a ScheduledSlot
   * const scheduledSlot = await prisma.scheduledSlot.upsert({
   *   create: {
   *     // ... data to create a ScheduledSlot
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ScheduledSlot we want to update
   *   }
   * })
   */
  upsert<T extends ScheduledSlotUpsertArgs>(args: Prisma.SelectSubset<T, ScheduledSlotUpsertArgs<ExtArgs>>): Prisma.Prisma__ScheduledSlotClient<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ScheduledSlots.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledSlotCountArgs} args - Arguments to filter ScheduledSlots to count.
   * @example
   * // Count the number of ScheduledSlots
   * const count = await prisma.scheduledSlot.count({
   *   where: {
   *     // ... the filter for the ScheduledSlots we want to count
   *   }
   * })
  **/
  count<T extends ScheduledSlotCountArgs>(
    args?: Prisma.Subset<T, ScheduledSlotCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ScheduledSlotCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ScheduledSlot.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledSlotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ScheduledSlotAggregateArgs>(args: Prisma.Subset<T, ScheduledSlotAggregateArgs>): Prisma.PrismaPromise<GetScheduledSlotAggregateType<T>>

  /**
   * Group by ScheduledSlot.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ScheduledSlotGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ScheduledSlotGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ScheduledSlotGroupByArgs['orderBy'] }
      : { orderBy?: ScheduledSlotGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ScheduledSlotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetScheduledSlotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ScheduledSlot model
 */
readonly fields: ScheduledSlotFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ScheduledSlot.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ScheduledSlotClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  postingChannel<T extends Prisma.PostingChannelDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PostingChannelDefaultArgs<ExtArgs>>): Prisma.Prisma__PostingChannelClient<runtime.Types.Result.GetResult<Prisma.$PostingChannelPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  publishedPhotos<T extends Prisma.ScheduledSlot$publishedPhotosArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ScheduledSlot$publishedPhotosArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PublishedPhotoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  scheduledSlotTweets<T extends Prisma.ScheduledSlot$scheduledSlotTweetsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ScheduledSlot$scheduledSlotTweetsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ScheduledSlotTweetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ScheduledSlot model
 */
export interface ScheduledSlotFieldRefs {
  readonly id: Prisma.FieldRef<"ScheduledSlot", 'String'>
  readonly userId: Prisma.FieldRef<"ScheduledSlot", 'String'>
  readonly chatId: Prisma.FieldRef<"ScheduledSlot", 'BigInt'>
  readonly scheduledFor: Prisma.FieldRef<"ScheduledSlot", 'DateTime'>
  readonly status: Prisma.FieldRef<"ScheduledSlot", 'ScheduledSlotStatus'>
  readonly createdAt: Prisma.FieldRef<"ScheduledSlot", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ScheduledSlot", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ScheduledSlot findUnique
 */
export type ScheduledSlotFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledSlot to fetch.
   */
  where: Prisma.ScheduledSlotWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot findUniqueOrThrow
 */
export type ScheduledSlotFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledSlot to fetch.
   */
  where: Prisma.ScheduledSlotWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot findFirst
 */
export type ScheduledSlotFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledSlot to fetch.
   */
  where?: Prisma.ScheduledSlotWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ScheduledSlots to fetch.
   */
  orderBy?: Prisma.ScheduledSlotOrderByWithRelationInput | Prisma.ScheduledSlotOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ScheduledSlots.
   */
  cursor?: Prisma.ScheduledSlotWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ScheduledSlots from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ScheduledSlots.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ScheduledSlots.
   */
  distinct?: Prisma.ScheduledSlotScalarFieldEnum | Prisma.ScheduledSlotScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot findFirstOrThrow
 */
export type ScheduledSlotFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledSlot to fetch.
   */
  where?: Prisma.ScheduledSlotWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ScheduledSlots to fetch.
   */
  orderBy?: Prisma.ScheduledSlotOrderByWithRelationInput | Prisma.ScheduledSlotOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ScheduledSlots.
   */
  cursor?: Prisma.ScheduledSlotWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ScheduledSlots from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ScheduledSlots.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ScheduledSlots.
   */
  distinct?: Prisma.ScheduledSlotScalarFieldEnum | Prisma.ScheduledSlotScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot findMany
 */
export type ScheduledSlotFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * Filter, which ScheduledSlots to fetch.
   */
  where?: Prisma.ScheduledSlotWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ScheduledSlots to fetch.
   */
  orderBy?: Prisma.ScheduledSlotOrderByWithRelationInput | Prisma.ScheduledSlotOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ScheduledSlots.
   */
  cursor?: Prisma.ScheduledSlotWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ScheduledSlots from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ScheduledSlots.
   */
  skip?: number
  distinct?: Prisma.ScheduledSlotScalarFieldEnum | Prisma.ScheduledSlotScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot create
 */
export type ScheduledSlotCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * The data needed to create a ScheduledSlot.
   */
  data: Prisma.XOR<Prisma.ScheduledSlotCreateInput, Prisma.ScheduledSlotUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot createMany
 */
export type ScheduledSlotCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ScheduledSlots.
   */
  data: Prisma.ScheduledSlotCreateManyInput | Prisma.ScheduledSlotCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ScheduledSlot createManyAndReturn
 */
export type ScheduledSlotCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * The data used to create many ScheduledSlots.
   */
  data: Prisma.ScheduledSlotCreateManyInput | Prisma.ScheduledSlotCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ScheduledSlot update
 */
export type ScheduledSlotUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * The data needed to update a ScheduledSlot.
   */
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateInput, Prisma.ScheduledSlotUncheckedUpdateInput>
  /**
   * Choose, which ScheduledSlot to update.
   */
  where: Prisma.ScheduledSlotWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot updateMany
 */
export type ScheduledSlotUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ScheduledSlots.
   */
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateManyMutationInput, Prisma.ScheduledSlotUncheckedUpdateManyInput>
  /**
   * Filter which ScheduledSlots to update
   */
  where?: Prisma.ScheduledSlotWhereInput
  /**
   * Limit how many ScheduledSlots to update.
   */
  limit?: number
}

/**
 * ScheduledSlot updateManyAndReturn
 */
export type ScheduledSlotUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * The data used to update ScheduledSlots.
   */
  data: Prisma.XOR<Prisma.ScheduledSlotUpdateManyMutationInput, Prisma.ScheduledSlotUncheckedUpdateManyInput>
  /**
   * Filter which ScheduledSlots to update
   */
  where?: Prisma.ScheduledSlotWhereInput
  /**
   * Limit how many ScheduledSlots to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ScheduledSlot upsert
 */
export type ScheduledSlotUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * The filter to search for the ScheduledSlot to update in case it exists.
   */
  where: Prisma.ScheduledSlotWhereUniqueInput
  /**
   * In case the ScheduledSlot found by the `where` argument doesn't exist, create a new ScheduledSlot with this data.
   */
  create: Prisma.XOR<Prisma.ScheduledSlotCreateInput, Prisma.ScheduledSlotUncheckedCreateInput>
  /**
   * In case the ScheduledSlot was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ScheduledSlotUpdateInput, Prisma.ScheduledSlotUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot delete
 */
export type ScheduledSlotDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
  /**
   * Filter which ScheduledSlot to delete.
   */
  where: Prisma.ScheduledSlotWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * ScheduledSlot deleteMany
 */
export type ScheduledSlotDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ScheduledSlots to delete
   */
  where?: Prisma.ScheduledSlotWhereInput
  /**
   * Limit how many ScheduledSlots to delete.
   */
  limit?: number
}

/**
 * ScheduledSlot.publishedPhotos
 */
export type ScheduledSlot$publishedPhotosArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PublishedPhoto
   */
  select?: Prisma.PublishedPhotoSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PublishedPhoto
   */
  omit?: Prisma.PublishedPhotoOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PublishedPhotoInclude<ExtArgs> | null
  where?: Prisma.PublishedPhotoWhereInput
  orderBy?: Prisma.PublishedPhotoOrderByWithRelationInput | Prisma.PublishedPhotoOrderByWithRelationInput[]
  cursor?: Prisma.PublishedPhotoWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PublishedPhotoScalarFieldEnum | Prisma.PublishedPhotoScalarFieldEnum[]
}

/**
 * ScheduledSlot.scheduledSlotTweets
 */
export type ScheduledSlot$scheduledSlotTweetsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlotTweet
   */
  select?: Prisma.ScheduledSlotTweetSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlotTweet
   */
  omit?: Prisma.ScheduledSlotTweetOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotTweetInclude<ExtArgs> | null
  where?: Prisma.ScheduledSlotTweetWhereInput
  orderBy?: Prisma.ScheduledSlotTweetOrderByWithRelationInput | Prisma.ScheduledSlotTweetOrderByWithRelationInput[]
  cursor?: Prisma.ScheduledSlotTweetWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ScheduledSlotTweetScalarFieldEnum | Prisma.ScheduledSlotTweetScalarFieldEnum[]
}

/**
 * ScheduledSlot without action
 */
export type ScheduledSlotDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ScheduledSlot
   */
  select?: Prisma.ScheduledSlotSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ScheduledSlot
   */
  omit?: Prisma.ScheduledSlotOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ScheduledSlotInclude<ExtArgs> | null
}
